"""
==================================================================
This module defines two helper functions:
1. reload the trained module from model.h5 file
2. given user input, returns the predicated answer
==================================================================
"""

import os
import model_builder
import numpy as np
from keras.models import load_model
import testing_data_utils


def recover_model_from(model_output_file):
    return load_model(model_output_file)


def get_pred(answer, x):

    prob_dist = answer.predict(x) # shape = (22, 1)
    answer_code = np.argmax(prob_dist)
    answer_confidence = np.max(prob_dist)
    prob_dist = np.round(prob_dist, 4)

    # print "probability:", probability # numpy.array
    # print "answer_code:", answer_code # numpy.int32
    # print "answer_prob:", answer_prob # numpy.float32

    return int(answer_code), float(answer_confidence), prob_dist.tolist() # numpy object is not JSON serializable


################################################################
################################################################
################################################################
########  Cusion   #############################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
